<Application x:Class="MagicPan.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MagicPan"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush Color="#FE3E3B3A" x:Key="EditWindowBG"/>
        <SolidColorBrush x:Key="BtnForeground" Color="#FFEEEEEE"/>
        <!--ContextMenu风格样式-->
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>
        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <!--<Color x:Key="ControlMouseOverColor">#FF3843C4</Color>-->
        <LinearGradientBrush x:Key="ControlMouseOverColor" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="#FF0C375C" Offset="0"/>
            <GradientStop Color="#FF4F9DB2" Offset="1"/>
            <GradientStop Color="#FF34738E" Offset="0.755"/>
        </LinearGradientBrush>
        <Color x:Key="GlyphColor">#FF444444</Color>
        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">DimGray</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>
        <LinearGradientBrush x:Key="MenuPopupBrush" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="#FF383635" Offset="0"/>
            <GradientStop Color="#FF726767" Offset="1"/>
            <GradientStop Color="#FF494747" Offset="0.755"/>
        </LinearGradientBrush>
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" Background="{StaticResource MenuPopupBrush}" BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                                <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="1" />
            <Setter Property="Margin" Value="0,4,0,4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                    <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" Background="{DynamicResource MenuPopupBrush}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource ControlMouseOverColor}"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"  Value="False">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- TopLevelItem -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource ControlMouseOverColor}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuItem -->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border x:Name="Border" BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                    <Border x:Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                                        <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">
                            <Path.Stroke>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Path.Stroke>
                        </Path>
                    </Border>
                    <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource ControlMouseOverColor}"/>
                    <Setter Property="BorderBrush" TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0" />
                                <GradientStop Color="Transparent" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border x:Name="Border" BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                    <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right" />
                    <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                    </Path>
                    <Popup x:Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{DynamicResource MenuPopupBrush}" BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource ControlMouseOverColor}"/>
                    <Setter Property="BorderBrush" TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0" />
                                <GradientStop Color="Transparent" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- MenuItem Style -->
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="OverridesDefaultStyle"
          Value="True" />
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                    <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                </Trigger>
                <Trigger Property="Role"
             Value="TopLevelItem">
                    <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <LinearGradientBrush x:Key="BtnBG" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="#FF383635" Offset="0"/>
            <GradientStop Color="#FF726767" Offset="1"/>
            <GradientStop Color="#FF494747" Offset="0.755"/>
        </LinearGradientBrush>
        <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
            <Setter Property="ShowInTaskbar" Value="False"/>
            <Setter Property="Foreground" Value="{DynamicResource BtnForeground}"/>
            <Setter Property="Background" Value="{DynamicResource EditWindowBG}"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}"
                                    >
                        <Border CornerRadius="0,0,5,5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="2,5,2,2">
                            <AdornerDecorator>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Label Content="{TemplateBinding Title}" FontSize="{TemplateBinding FontSize}"  Grid.Row="0" Foreground="{TemplateBinding Foreground}" local:WindowStyleHelper.CanDragMove="true" Width="auto"/>
                                    <Label Background="Transparent" Content="×" FontSize="25" Grid.Row="0" HorizontalAlignment="Right" Width="auto" VerticalAlignment="Top" local:WindowStyleHelper.IsCloseActive="True" Margin="0,-5,0,0" ToolTip="by 颜">
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Setter Property="Foreground" Value="{DynamicResource BtnForeground}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Foreground" Value="Red"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                    <ContentPresenter Grid.Row="1" VerticalAlignment="Stretch" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                    <ResizeGrip x:Name="WindowResizeGrip" Grid.Row="1" HorizontalAlignment="Right" IsTabStop="False" Visibility="Visible" VerticalAlignment="Bottom"/>
                                </Grid>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToolTip">
            <Setter Property="Background" Value="DimGray"/>
            <Setter Property="Foreground" Value="{DynamicResource BtnForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Background="{TemplateBinding Background}" CornerRadius="3" >
                            <ContentPresenter Margin="10" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
